from itertools import combinations

def solution(str1, str2):
    # 두 글자씩 자른 다중 집합 생성
    comb1 = [ str1[i:i+2] for i in range(len(str1)-1) ]
    comb2 = [ str2[i:i+2] for i in range(len(str2)-1) ]
    
    # 영문자로 이루어진 원소만 대문자로 변환해 남김
    comb1 = [ c.upper() for c in comb1 if c.isalpha()]
    comb2 = [ c.upper() for c in comb2 if c.isalpha()]
    
    # 두 집합 모두 공집합일 경우 자카드 유사도는 1
    if not comb1 and not comb2:
        return 1*65536
    
    # 교집합과 합집합 구함
    intersection_len = []
    for c in comb1:
        if c in comb2:
            intersection_len.append(c)
            comb2.remove(c)
    union_len = comb1 + comb2
    
    return int(len(intersection_len)/len(union_len)*65536)